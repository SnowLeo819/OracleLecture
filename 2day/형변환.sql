-- 형 변환
--TO CHAR
--TO DATE

DESC EMP;

-- EMPNO 는 숫자 데이터기 때문에 문자를 자동으로 수정하여 연산 //숫자일 때 만 가능..
SELECT EMPNO, ENAME, EMPNO+'100' FROM EMP;

-- 사칙연산은 숫자에 사용하기 때문에 오류가 발생
SELECT 'NAME : ' + ENAME FROM EMP;
SELECT 'NAME : '||ENAME FROM EMP;   -- 문자함수를 활용하여 적용

-- 날짜 → 문자는 아래와 같이 가능
SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') AS TODAY FROM DUAL;
SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD HH:MI:SS') AS AMPM FROM DUAL;     -- 12시간 기준
SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS') AS ALLDAY FROM DUAL; -- 24시간 기준

SELECT SYSDATE,
TO_CHAR(SYSDATE,'MM')AS MM,
TO_CHAR(SYSDATE,'MON')AS MON,     --영문일때 차이...JAN
TO_CHAR(SYSDATE,'MONTH')AS MONTH,  --영문일때 차이...JANUARY
TO_CHAR(SYSDATE,'DD')AS DD,      -- 날짜 
TO_CHAR(SYSDATE,'DY')AS DY,      -- 요일 FRI / 금
TO_CHAR(SYSDATE,'DAY')AS DAY,     -- 요일 FRIDAY / 금요일
TO_CHAR(SYSDATE,'YYYY-MM-DD DAY HH24:MI:SS') AS FULLDAY
FROM DUAL;

SELECT SYSDATE,
TO_CHAR(SYSDATE,'MM') AS MM,
TO_CHAR(SYSDATE,'MON','NLS_DATE_LANGUAGE = KOREAN') AS MM_KOR,
TO_CHAR(SYSDATE,'MON','NLS_DATE_LANGUAGE = ENGLISH') AS MM_ENG,
TO_CHAR(SYSDATE,'MONTH','NLS_DATE_LANGUAGE = ENGLISH') AS MM_ENG,
LOWER(TO_CHAR(SYSDATE,'MONTH','NLS_DATE_LANGUAGE = ENGLISH')) AS MM_ENG,
INITCAP(TO_CHAR(SYSDATE,'MONTH','NLS_DATE_LANGUAGE = ENGLISH')) AS MM_ENG
FROM DUAL;

SELECT SYSDATE,
TO_CHAR(SYSDATE,'MM') AS MM,
TO_CHAR(SYSDATE,'DD') AS DD,
TO_CHAR(SYSDATE,'DY') AS DY,
TO_CHAR(SYSDATE,'DY','NLS_DATE_LANGUAGE = ENGLISH') AS DY_ENG,
TO_CHAR(SYSDATE,'DY','NLS_DATE_LANGUAGE = JAPANESE') AS DY_ENG
FROM DUAL;


-- 숫자 변환 --

-- 표시규칙 변환
SELECT SAL,
TO_CHAR(SAL,'$999,999'),  -- 표시형태 수정 (달러
TO_CHAR(SAL,'L999,999'),  -- 표시형태 수정 (원화
TO_CHAR(SAL,'$000,000'),   -- 0 은 자리 차지
TO_CHAR(SAL,'$000,000.00')   -- 0 은 자리 차지
FROM EMP;

-- 문자 → 숫자 변환
SELECT '1300' - '1200' FROM DUAL;
SELECT TO_NUMBER('1300') - TO_NUMBER('1200') FROM DUAL;

SELECT * FROM EMP
WHERE HIREDATE < TO_DATE('1981/06/01','YYYY/MM/DD');
SELECT TO_DATE('1981/06/01','YYYY/MM/DD') FROM DUAL;
SELECT TO_DATE('1981/06/01','YY/MM/DD') FROM DUAL; -- 오류생길 수 있으니 사용X


-- IS NULL  NVL NULL 계산 함수
SELECT EMPNO, ENAME,SAL,COMM, SAL+COMM,

-- COMM에 NULL이 있으면 0으로
NVL(COMM,0),
SAL*12 + NVL(COMM,0) AS ANNSAL
FROM EMP;

-- NVL2( 대상 , NULL이 있을경우, NULL없을경우
SELECT EMPNO, ENAME,
-- NULL값의 유무 반환
NVL2(COMM,'O','X')
FROM EMP;

SELECT EMPNO, ENAME,
NVL2(COMM,SAL*12+COMM,SAL*12) AS ANNUALSAL
FROM EMP;

--CASE
--DECODE   IF/SWITCH()와 비슷   -- 표준SQL이 아님.. ORACLE에서만 활용가능
SELECT EMPNO,ENAME,JOB,SAL,
DECODE(JOB, 'MANAGER',SAL*1.1, 
            'SALESMAN',SAL*1.05,
            'ANALYST',SAL,
            SAL*1.03
            ) AS UP_SAL
FROM EMP;

--직급 한글로 바꾸기.
SELECT EMPNO,ENAME,JOB,SAL,
    DECODE(JOB,'CLERK','점원',
--               'SALESMAN', '영업사원',
               'MANAGER', '관리자',
               'PRESIDENT','회장',
               'ANALYST', '분석가',
               '영업사원'
               ) AS JOB_KR
FROM EMP;

SELECT 'MAIE' GENDER FROM DUAL;

-- 여러개를 묶어서 테이블로 만들기..
WITH TEMP AS (
SELECT 'MALE' GENDER FROM DUAL UNION ALL
SELECT 'FEMALE' GENDER FROM DUAL UNION ALL
SELECT 'BISEXUAL' GENDER FROM DUAL
)
--SELECT * FROM TEMP;
SELECT GENDER, 
DECODE(GENDER,'MALE','남자','FEMALE','여자','기타') AS GENDER_KR
FROM TEMP;


---- CASE ----  표준 구문
SELECT EMPNO,ENAME,JOB,SAL,
    CASE JOB 
    WHEN 'MANAGER' THEN SAL*1.1 
    WHEN 'SALESMAN' THEN SAL*1.05
    WHEN 'ANALYST' THEN SAL
    ELSE SAL*1.03
    END AS UP_SAL
FROM EMP;

---- COMM 유무 확인.. 없으면 해당사항 없음, 0이면 수당없음, 있으면 수당은 : 000
SELECT EMPNO, ENAME, SAL, COMM, --FROM EMP;
CASE
WHEN COMM IS NULL THEN '해당사항 없음'
WHEN COMM = 0 THEN '수당없음'
WHEN COMM > 0 THEN '수당 : '||COMM
END AS COMM_RESULT
FROM EMP;

--- SAL 2900 OVER = DIAMOND 2700 GOLD 2000 SILVER ELSE BRONZE
SELECT EMPNO, ENAME, SAL,
CASE 
WHEN SAL >=5000 THEN 'VIP'
WHEN SAL >=2900 THEN 'DIAMOND'
WHEN SAL >=2700 THEN 'GOLD'
WHEN SAL >=2000 THEN 'SILVER'
ELSE 'BRONZE'
END AS GRADE
FROM EMP
ORDER BY SAL DESC;

-- Q 는 날짜함수에서 분기를 나타냄..
SELECT HIREDATE, TO_CHAR(HIREDATE,'Q') FROM EMP;

SELECT EMPNO, ENAME, HIREDATE, 
TO_CHAR(HIREDATE,'YY')||'년 '||TO_CHAR(HIREDATE,'Q')||'/4분기 입사' AS 분기제
FROM EMP
ORDER BY HIREDATE ASC;

SELECT EMPNO, ENAME, TO_CHAR(HIREDATE,'YYYY-MM') AS ENTRY,
CASE
WHEN TO_CHAR(HIREDATE,'Q')=1 THEN '1분기 입사'
WHEN TO_CHAR(HIREDATE,'Q')=2 THEN '2분기 입사'
WHEN TO_CHAR(HIREDATE,'Q')=3 THEN '3분기 입사'
ELSE '4분기 입사'
END AS QURTER
FROM EMP 
ORDER BY HIREDATE ASC;
